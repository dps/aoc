from utils import *
from intcode import computer

input = [i.strip() for i in open("input","r").readlines()]


def part1():
    program = [int(x) for x in input[0].split(",")]    
    allmem = defaultdict(int)
    for i, v in enumerate(program):
        allmem[i] = v

    c = computer(allmem, 0, 0, 0)
    world = "".join([chr(ch) for ch in c if ch]).split('\n')[:-2]
    #print("\n".join(world))
    acc = 0
    p = None
    for y in range(1,len(world)-1):
        for x in range(1, len(world[0])-1):
            if world[y][x] == '^':
                p = (x,y)
            if world[y][x] != '.' and world[y-1][x] != '.' and world[y+1][x] != '.' and world[y][x-1] != '.' and world[y][x+1] != '.':
                # O
                acc += y*x
    aoc(acc)

def part2():
    program = [int(x) for x in input[0].split(",")]    
    allmem = defaultdict(int)
    for i, v in enumerate(program):
        allmem[i] = v
    allmem[0] = 2

    # I solved this manually / visually.
    #    01234567890123456789
    P = "A,B,A,B,C,A,B,C,A,C"
    A = "R,6,L,6,L,10"
    B = "L,8,L,6,L,10,L,6"
    C = "R,6,L,8,L,10,R,6"

    instructions = ([ord(i) for i in P] + [10] +
                    [ord(i) for i in A] +  [10] +
                    [ord(i) for i in B] + [10] +
                    [ord(i) for i in C] +
                    [10, ord('n'), 10])

    c = computer(allmem, 0, 0, instructions)
    output= [ch for ch in c if ch]
    aoc(output[-1])

# ........#######..........................
# ........#.....#..........................
# ........#.....#..........................
# ........#.....#..........................
# ......###########........................
# ......#.#.....#.#........................
# ......#.#.....#######....................
# ......#.#.......#...#....................
# ......#.#.....###########................
# ......#.#.....#.#...#...#................
# #######.#########...#...#.....#..........
# #.............#.....#...#.....#..........
# #.............#.....#...#.....#..........
# #.............#.....#...#.....#..........
# #.............#...^######.....#..........
# #.............#.....#.........#..........
# #.............#######.........###########
# #.......................................#
# ###########.............................#
# ..........#.............................#
# ..........#.............................#
# ..........#.............................#
# ........#######.........................#
# ........#.#...#.........................#
# ....#######...#...................#######
# ....#...#.....#...................#......
# ....#...#.....#...................#......
# ....#...#.....#...................#......
# ....#...#.....#.......#######.....#......
# ....#...#.....#.......#.....#.....#......
# ....###########.......#.....#.....#......
# ........#.............#.....#.....#......
# ........#######.......#.....#.....#......
# ..............#.......#.....#.....#......
# ..............#.......#.....#######......
# ..............#.......#..................
# ..............#.......#..................
# ..............#.......#..................
# ..............#########..................
part1()
part2()
